.container {
  display: flex;
  row-gap: 0.5rem;
  margin-bottom: 1rem;
}

.containerSingleLine {
  flex-direction: row;
  align-items: center;
}

.containerMutliline {
  flex-direction: column;
}

.container h1,
.container h2,
.container h3,
.container h4,
.container h5,
.container h6 {
  margin: 0;
}

.containerSingleLine .typeContainer {
  flex-grow: 1;
}

.containerMutliline .typeContainer {
  width: 100%
}

.typeInnerContainer,
.offscreenMeasureContainer {
  font-family: var(--x-font-mono);
  font-size: var(--speakeasy-pill-font-size);
  text-wrap: nowrap;
  background-color: var(--x-color-white);
  border-radius: var(--x-radius-md);
  border: 1px solid var(--x-color-gray-200);
}

.typeInnerContainer:where(:global(.dark) *),
.typeInnerContainerMultiline:where(:global(.dark) *) {
  background-color: var(--x-color-black);
  color: var(--x-color-slate-200);
  border-color: var(--x-color-neutral-800);
}

.typeInnerContainer {
  padding: var(--speakeasy-pill-padding);
}

.typeInnerContainerInline {
  width: fit-content;
}

.typeInnerContainerMultiline {
  padding: 0.5rem 0.75rem;
}

/* For some reason, anchor tag styles are horribly butchered by something,
   so we reset them to what they should be here */
.typeInnerContainer a {
  color: var(--x-color-primary-600);
  text-decoration-line: underline;
}

.titleContainer {
  display: inline-flex;
  align-items: center;
  width: fit-content;
  padding-inline: 0.5rem;
  gap: 0.5rem;

  /*
   * We set a minimum height for the title container to ensure that the title
   * doesn't jank when switching between inline types and multiline types. We
   * need the title to be taller than the type container so the height of the
   * first row in the flexbox doesn't change on layout shift.
   */
  min-height: 2rem;
}

.offscreenMeasureContainer {
  position: absolute;
  left: -9999px;
  margin: 0;
  padding: 0;
}
