.treeTopper {
  display: flex;
  justify-content: center;
  width: calc(2 * var(--speakeasy-expandable-cell-size));
  height: var(--speakeasy-expandable-treetoper-diameter);
}

.treeTopperDot {
  border: var(--speakeasy-border-width) solid var(--speakeasy-expandable-line-color);
  border-radius: 25%;
  width: var(--speakeasy-expandable-treetoper-diameter);
}

.connectingCellContainer {
  display: grid;
  grid-template-columns: auto auto;
  grid-template-rows: auto 1fr;
}

.connectingCell {
  min-width: var(--speakeasy-expandable-cell-size);
  min-height: calc(var(--speakeasy-expandable-cell-height-multiplier) * var(--speakeasy-expandable-cell-size));
}

.contentAligner {
  display: flex;
  flex-direction: row;
  margin-top: calc(var(--speakeasy-expandable-cell-height-multiplier) / 4 * var(--speakeasy-expandable-cell-size));
  width: 100%;
}

.expandableCellContainer {
  display: flex;
  flex-direction: column;
  min-height: calc(var(--speakeasy-expandable-cell-height-multiplier) * var(--speakeasy-expandable-cell-size));
}

.expandableButtonContainer {
  min-width: calc(2 * var(--speakeasy-expandable-cell-size));
  padding: 3px;
}

.expandableButton {
  display: flex;
  align-items: center;
  justify-content: center;
  border: var(--speakeasy-border-width) solid var(--speakeasy-expandable-line-color);
  border-style: solid;
  border-radius: var(--speakeasy-expandable-button-radius);
  cursor: pointer;
  padding: 5px;
  appearance: none;
  background-color: transparent;
  width: calc(2 * var(--speakeasy-expandable-cell-size) - 6px);
  height: calc(2 * var(--speakeasy-expandable-cell-size) - 6px);
}

.expandableButtonCircle {
  border-radius: 50%;
}

.expandableChevron {
  transition: transform 0.2s ease-in-out;
  transform-origin: center;
}

.expandableConnectionContainer {
  display: flex;
  flex-direction: row;
  width: 100%;
  flex-grow: 1;
}

.expandableConnection {
  min-width: var(--speakeasy-expandable-cell-size);
}

.nonExpandableCell {
  min-width: calc(2 * var(--speakeasy-expandable-cell-size) - 6px);
  min-height: calc(2 * var(--speakeasy-expandable-cell-size) - 6px);
  max-height: calc(2 * var(--speakeasy-expandable-cell-size) - 6px);
  margin: 3px;
  border: var(--speakeasy-border-width) solid var(--speakeasy-expandable-line-color);
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  user-select: none;
}

.verticalConnected {
  border-right: var(--speakeasy-border-width) solid var(--speakeasy-expandable-line-color);
}

.verticalHighlighted {
  border-right: var(--speakeasy-border-width) solid var(--speakeasy-expandable-line-color-active);
}

.horizontalConnected {
  border-bottom: var(--speakeasy-border-width) solid var(--speakeasy-expandable-line-color);
}

.horizontalHighlighted {
  border-bottom: var(--speakeasy-border-width) solid var(--speakeasy-expandable-line-color-active);
}

.breakoutCell {
  display: flex;
  flex-direction: column;
  padding-left: 0.5rem;
  flex-grow: 1;
}

.breakoutCellTitle {
  height: calc(2 * var(--speakeasy-expandable-cell-size));
  display: flex;
  align-items: center;
}

.expandableEntry {
  display: flex;
  flex-direction: row;
}

.propertyCell {
  width: 100%;
  padding-left: 0.5rem;
}

.propertyCellContent {
  width: 100%;
  margin-block: 1rem;
}

.propertyTitleContainer {
  display: flex;
  flex-direction: row;
  align-items: center;
  row-gap: 0.5rem;
  width: 100%;
}

.propertyTitleContainer h1,
.propertyTitleContainer h2,
.propertyTitleContainer h3,
.propertyTitleContainer h4,
.propertyTitleContainer h5,
.propertyTitleContainer h6 {
  margin: 0;
}

.typeContainer {
  flex-grow: 1;
}

.typeInnerContainer,
.offscreenMeasureContainer {
  font-family: var(--speakeasy-font-mono);
  font-size: var(--speakeasy-property-type-font-size);
  text-wrap: nowrap;
}

.typeInnerContainer {
  padding: var(--speakeasy-pill-padding);
  background-color: var(--speakeasy-property-type-background-color);
  border-radius: var(--speakeasy-property-type-border-radius);
}

.typeInnerContainer a {
  scroll-behavior: smooth;
}

.typeInnerContainerInline {
  width: fit-content;
}

.typeInnerContainerMultiline {
  padding: 0.5rem 0.75rem;
  margin-bottom: 1rem;
}

/* For some reason, anchor tag styles are horribly butchered by something
   in Nextra, so we reset them to what they should be here */
.typeInnerContainer a {
  color: var(--speakeasy-anchor-color);
  text-decoration-line: underline;
}

.propertyTitlePrefixContainer {
  display: inline-flex;
  align-items: center;
  width: fit-content;
  gap: 0.5rem;
  padding-right: 0.5rem;

  /*
   * We set a minimum height for the title container to ensure that the title
   * doesn't jank when switching between inline types and multiline types. We
   * need the title to be taller than the type container so the height of the
   * first row in the flexbox doesn't change on layout shift.
   */
  min-height: 2rem;
}

.offscreenMeasureContainer {
  position: absolute;
  left: -9999px;
  top: -9999px;
  margin: 0;
  padding: 0;
}
