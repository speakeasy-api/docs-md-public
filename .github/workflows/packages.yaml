name: Packages

on:
  push:
    branches: [main]
  pull_request:
    branches: [main, new-try-it-now]
  merge_group:

jobs:
  build-and-test:
    name: Packages Build and Lint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          # Needed to copy the WASM file during build
          lfs: true
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "24"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Build packages
        run: make build-packages
      - name: Archive build artifacts
        run: |
          tar -czf build-artifacts.tar.gz packages/compiler/dist packages/react/dist packages/shared/dist packages/web-components/dist
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: package-build-artifacts
          path: build-artifacts.tar.gz
          retention-days: 1
      - name: Type check
        run: make type-check-packages
      - name: Lint
        run: make lint-packages
      - name: Check formatting
        run: make check-formatting-packages
      - name: Verify package versions
        run: make verify-package-versions

  integration-tests:
    name: Playwright Integration Tests
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - uses: actions/checkout@v4
        with:
          # Needed to copy the WASM file during build
          lfs: true
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "24"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: package-build-artifacts
      - name: Restore build artifacts
        run: tar -xzf build-artifacts.tar.gz
      - name: Link workspace binaries
        run: npm install --workspaces
      - name: Cache example builds
        uses: actions/cache@v4
        with:
          path: |
            examples/nextra/.next/cache
            examples/docusaurus/node_modules/.cache
          key: ${{ runner.os }}-examples-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('examples/**/*.js', 'examples/**/*.jsx', 'examples/**/*.ts', 'examples/**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-examples-${{ hashFiles('**/package-lock.json') }}-
      - name: Build examples
        run: |
          npm run build --workspace examples/docusaurus --ignore-scripts &
          npm run build --workspace examples/nextra --ignore-scripts &
          wait
      - name: Get Playwright version
        id: playwright-version
        run: echo "version=$(node -p "require('./package.json').dependencies['@playwright/test']")" >> $GITHUB_OUTPUT
      - name: Cache Playwright browsers
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ steps.playwright-version.outputs.version }}
          restore-keys: |
            ${{ runner.os }}-playwright-
      - name: Install Playwright browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps
      - name: Run Playwright tests
        run: make test-integration
      - name: Upload test results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: tests/integration/playwright-report/
          retention-days: 30
